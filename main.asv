clear all;
close all;
clc
global vector_length;

vector_length=1600;
input_data = randi([0 1], 100, 1);
t_clk=randi(64,1,1)+1;

clk = clk_gen(vector_length,t_clk);
%clk_wzor=zeros(1,vector_length);
start=30;

# for i=start+1:1600
    # if (mod(i-start,31) <15) 
        # clk_wzor(i)=1; 						
    # end
# end
%---------------------driver----------------------------------------------%

driv_data = driv_script(input_data);
%data=[];

%---------------------Channel---------------------------------------------%

chanel_data = driv_data;
szum=szum(driv_data,0.5);

%---------------------Clock_Recovery--------------------------------------%

clk_out=pll6(clk,t_clk);

%---------------------Data_Recovery---------------------------------------%

[data, min_eye300_100, min_eye100_100, min_eye100_300, setup, hold, out] = data_recovery2(driv_data, clk_out);

nums_str=[data{:}];
nums_split=[];

for i=1:length(nums_str)
    nums_split(i)=str2num(nums_str(i));
end
nums_split=nums_split';

data_out=driv_script(nums_split);
for i=1:50
    if nums_split(i)~=input_data(i) 
        printf('error w %d',i);
		end
end
%---------------------Dodatki---------------------------------------------%

# plot(driv_data);
# ylabel("data in");
# figure
# plot(clk_wzor(1:66));
# ylabel('clk wzor');
# figure
# plot(clk_out(1:66));
# ylabel('clk out');
# figure
# plot(data_out);
# ylabel("data out");